# -*- coding: utf-8 -*-
"""COVID-19 Detector

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k4NWrptGEvySUxXJ3Pa57vMTeYL8XNMk
"""

# dataset uploaded on dropbox
# we will download our dataset by this link - http://cb.lk//covid_19


!wget http://cb.lk//covid_19

# unzip the folder

!unzip covid_19

# Train path 

TRAIN_PATH = "CovidDataset/Train"

# Val path

VAL_PATH = "CovidDataset/Test"

# import

import numpy as np
import matplotlib.pyplot as plt
import keras
from keras.layers import *
from keras.models import *
import tensorflow as tf
import os

assert tf.__version__.startswith('2')

from keras.preprocessing import *

"""# CNN Based Model in Keras"""

model = Sequential()

model.add(Conv2D(32, kernel_size=(3,3), activation='relu', input_shape = (224,224,3)))
model.add(Conv2D(64, kernel_size=(3,3), activation='relu', ))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.25))

model.add(Conv2D(64, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.25))

model.add(Conv2D(128, (3,3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.25))


model.add(Flatten())
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss=keras.losses.binary_crossentropy, optimizer='adam', metrics=['accuracy'])

model.summary()

"""## Train the Model"""

# Train from Scratch

train_datagen = image.ImageDataGenerator(
    rescale = 1/255,
    shear_range = 0.2,
    zoom_range = 0.2,
    horizontal_flip = True,
)

test_dataset  = image.ImageDataGenerator(rescale=1./255)


train_generator  = train_datagen.flow_from_directory(
    'CovidDataset/Train',
    target_size = (224,224),
    batch_size = 32,
    class_mode = 'binary'
)

train_generator.class_indices

validation_generator = test_dataset.flow_from_directory(
    'CovidDataset/Val',
    target_size = (224,224),
    batch_size = 32,
    class_mode = 'binary'

)

print (train_generator.class_indices)

labels = '\n'.join(sorted(train_generator.class_indices.keys()))

with open('labels.txt', 'w') as f:
  f.write(labels)

!cat labels.txt

validation_generator.class_indices

# number of training images we have are

train_generator.n

# number of test images we have are  

validation_generator.n

hist = model.fit_generator(
    train_generator,
    steps_per_epoch = 6,
    epochs = 10,
    validation_data = validation_generator,
    validation_steps = 2
)

"""# Loss is very Less"""

model.save('model_advance.h5')

saved_model_dir = 'save/fine_tuning'
tf.saved_model.save(model, saved_model_dir)

converter = tf.lite.TFLiteConverter.from_saved_model(saved_model_dir)
tflite_model = converter.convert()

with open('covid_model.tflite', 'wb') as f:
  f.write(tflite_model)

from google.colab import files

files.download('covid_model.tflite')
files.download('labels.txt')

model.evaluate_generator(train_generator)

"""# Test Images"""

model = load_model('model_advance.h5')

train_generator.class_indices

y_actual = []
y_test = []

for i in os.listdir("./CovidDataset/Val/Normal/"):
    img = image.load_img("./CovidDataset/Val/Normal/" + i , target_size=(224,224) )
    img = image.img_to_array(img)
    img = np.expand_dims(img, axis=0)
    p= model.predict_classes(img)
    y_test.append(p[0,0])
    y_actual.append(1)

for i in os.listdir("./CovidDataset/Val/Covid/"):
    img = image.load_img("./CovidDataset/Val/Covid/"+ i, target_size=(224, 224))
    img = image.img_to_array(img)
    img = np.expand_dims(img, axis=0)
    p = model.predict_classes(img)
    y_test.append(p[0,0])
    y_actual.append(0)

y_actual = np.array(y_actual)
y_test = np.array(y_test)

"""# Confusion Matrix"""

from sklearn.metrics import confusion_matrix
import seaborn as sns

cm = confusion_matrix(y_actual, y_test)

sns.heatmap(cm, cmap='plasma', annot=True)

